# Enhanced CI/CD Pipeline for CNB Risk Platform
# Banking-grade deployment with automated testing and health checks

name: Build and deploy Python app to Azure Web App - cnb-suspicious-detector

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  PYTHON_VERSION: '3.9'
  AZURE_WEBAPP_NAME: 'cnb-suspicious-detector-b7hjaafcejcmaga6.canadacentral-01'

jobs:
  # Continuous Integration
  test:
    runs-on: ubuntu-latest
    name: Run Tests and Quality Checks
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Create virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate
        echo "VIRTUAL_ENV=venv" >> $GITHUB_ENV
        echo "$PWD/venv/bin" >> $GITHUB_PATH

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --tb=short --disable-warnings
      continue-on-error: false

    - name: Test API endpoints
      run: |
        python app.py &
        APP_PID=$!
        sleep 10
        
        curl -f http://localhost:8000/health || exit 1
        curl -f http://localhost:8000/api/stats || exit 1
        
        curl -f -X POST http://localhost:8000/api/predict \
          -H "Content-Type: application/json" \
          -d '{"amount":50000,"account_balance":25000,"transaction_type":"withdrawal"}' || exit 1
        
        kill $APP_PID

  # Build and Package
  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
      
      - name: Install dependencies
        run: pip install -r requirements.txt
        
      - name: Zip artifact for deployment
        run: zip release.zip ./* -r

      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: |
            release.zip
            !venv/

  # Continuous Deployment
  deploy:
    runs-on: ubuntu-latest
    needs: build
    name: Deploy to Azure
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Unzip artifact for deployment
        run: unzip release.zip

      - name: Deploy to Azure Web App
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'cnb-suspicious-detector'
          slot-name: 'Production'
          publish-profile: ${{ secrets.AZUREAPPSERVICE_PUBLISHPROFILE_BC7C040248CC483E9213F45CB920C935 }}

      - name: Post-deployment health check
        run: |
          echo "Waiting for deployment to stabilize..."
          sleep 30
          
          for i in {1..5}; do
            echo "Health check attempt $i/5"
            
            if curl -f --max-time 30 "https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health"; then
              echo "Health check passed!"
              break
            elif [ $i -eq 5 ]; then
              echo "Health check failed after 5 attempts"
              exit 1
            else
              echo "Retrying in 10 seconds..."
              sleep 10
            fi
          done

      - name: Post-deployment API validation
        run: |
            echo "Validating API endpoints..."
            sleep 60
            
            RESPONSE=$(curl -s -X POST "https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api/predict" \
              -H "Content-Type: application/json" \
              -d '{
                "amount": 50000,
                "account_balance": 25000, 
                "transaction_type": "withdrawal",
                "country": "CZ"
              }')
            
            echo "API Response: $RESPONSE"
            
            if echo "$RESPONSE" | grep -q "risk_score" && echo "$RESPONSE" | grep -q "risk_level"; then
              echo "API validation passed - model is ready!"
            elif echo "$RESPONSE" | grep -q "training in progress"; then
              echo "API validation passed - model is training (expected behavior)"
            else
              echo "API validation failed - unexpected response"
              exit 1
            fi
          

      - name: Deployment summary
        run: |
          echo "Deployment completed successfully!"
          echo "Application URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"
          echo "Health check: Passed"
          echo "API validation: Passed"
          echo "Deployed at: $(date)"
          echo "Commit: ${{ github.sha }}"

  # Post-deployment monitoring
  monitor:
    runs-on: ubuntu-latest
    needs: deploy
    name: Post-deployment monitoring
    if: success()

    steps:
    - name: Check application metrics
      run: |
        echo "Gathering application metrics..."
        
        STATS=$(curl -s "https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/api/stats")
        echo "Application stats: $STATS"
        
        if echo "$STATS" | grep -q "model_accuracy"; then
          echo "ML model is loaded and operational"
        else
          echo "Warning: ML model metrics not available"
        fi

    - name: Notify deployment status
      run: |
        echo "Deployment notification:"
        echo "CNB Risk Platform deployed successfully"
        echo "Version: ${{ github.sha }}"
        echo "Time: $(date)"
        echo "URL: https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net"